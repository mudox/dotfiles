//
// THIS FILE WAS AUTOGENERATED BY ZELLIJ, THE PREVIOUS FILE AT THIS LOCATION WAS COPIED TO: /Users/mudox/.config/zellij/config.kdl.bak.1
//

keybinds clear-defaults=true {

  // shortcusts
  shared_among "locked" "normal" {
    // goto tab
    bind "Ctrl 1"   { GoToTab 1; }
    bind "Ctrl 2"   { GoToTab 2; }
    bind "Ctrl 3"   { GoToTab 3; }
    bind "Ctrl 4"   { GoToTab 4; }
    bind "Ctrl 5"   { GoToTab 5; }

    // create, close pane
    bind "Super enter"      { NewPane; }
    bind "Super backspace"  { CloseFocus; }

    // create, close tab
    bind "Super Ctrl enter"      { NewTab; }
    bind "Super Ctrl backspace"  { CloseTab; }

    // session manager
    bind "Super y" {
      LaunchOrFocusPlugin "session-manager" {
        floating true
        move_to_focused_tab true
      }
      SwitchToMode "locked"
    }

    // floating
    bind "Super /" { ToggleFloatingPanes; }

    // resize
    bind "Super ="  { Resize "Increase"; }
    bind "Super -"  { Resize "Decrease"; }

    // layout
    bind "Super Ctrl ."  { NextSwapLayout;      }
    bind "Super Ctrl ,"  { PreviousSwapLayout;  }
  }

  // navigate
  shared_among "locked" "normal" "pane" "tab" {
    bind "Super h" { MoveFocus "left";  }
    bind "Super j" { MoveFocus "down";  }
    bind "Super k" { MoveFocus "up";    }
    bind "Super l" { MoveFocus "right"; }

    bind "Super [" { GoToPreviousTab; }
    bind "Super ]" { GoToNextTab;     }
  }

  // quick switch to modes
  shared_among "locked" "normal" "pane" "tab" {
    // normal
    bind "Super ;"     { SwitchToMode "normal"; }
    // pane
    bind "Super ," { SwitchToMode "pane"; }
    // tab
    bind "Super ."      { SwitchToMode "tab"; }
    // scroll
    bind "Super u" { SwitchToMode "scroll"; }
  }
  normal {
    bind "d"         { Detach;                }
    bind "X" "Q"     { Quit;                  }
    bind "backspace" { SwitchToMode "locked"; }
    bind "x"         { CloseFocus; }

    // goto tab
    bind "1"   { GoToTab 1; SwitchToMode "locked"; }
    bind "2"   { GoToTab 2; SwitchToMode "locked"; }
    bind "3"   { GoToTab 3; SwitchToMode "locked"; }
    bind "4"   { GoToTab 4; SwitchToMode "locked"; }
    bind "5"   { GoToTab 5; SwitchToMode "locked"; }
    bind "6"   { GoToTab 6; SwitchToMode "locked"; }
    bind "7"   { GoToTab 7; SwitchToMode "locked"; }
    bind "8"   { GoToTab 8; SwitchToMode "locked"; }
    bind "9"   { GoToTab 9; SwitchToMode "locked"; }
  }

  pane {
    // goto
    bind "h" "left"  { MoveFocus "left";  }
    bind "j" "down"  { MoveFocus "down";  }
    bind "k" "up"    { MoveFocus "up";    }
    bind "l" "right" { MoveFocus "right"; }

    bind "tab"       { SwitchFocus;       }

    // create
    bind "n"      { NewPane;           SwitchToMode "locked"; }
    bind "N"      { NewPane "stacked"; SwitchToMode "locked"; }
    bind "Ctrl j" { NewPane "down";    SwitchToMode "locked"; }
    bind "Ctrl l" { NewPane "right";   SwitchToMode "locked"; }

    // rename
    bind "r" { SwitchToMode "renamepane"; PaneNameInput 0; }

    // close
    bind "x" { CloseFocus; SwitchToMode "locked"; }

    // floating
    bind "f" { ToggleFloatingPanes;       SwitchToMode "locked"; }

    // border
    bind "#" { TogglePaneFrames; SwitchToMode "locked"; }

    // break
    // bind "[" { BreakPaneLeft;  SwitchToMode "locked"; }
    // bind "]" { BreakPaneRight; SwitchToMode "locked"; }
    bind "%" { BreakPane;      SwitchToMode "locked"; }
  }
  tab {
    // goto
    bind "tab" { ToggleTab; }

    bind "1"   { GoToTab 1; }
    bind "2"   { GoToTab 2; }
    bind "3"   { GoToTab 3; }
    bind "4"   { GoToTab 4; }
    bind "5"   { GoToTab 5; }
    bind "6"   { GoToTab 6; }
    bind "7"   { GoToTab 7; }
    bind "8"   { GoToTab 8; }
    bind "9"   { GoToTab 9; }

    // create, rename, close
    bind "n" { NewTab; SwitchToMode "locked"; }
    bind "r" { SwitchToMode "renametab"; TabNameInput 0; }
    bind "x" { CloseTab; SwitchToMode "locked"; }

    // move
    bind "{"  { MoveTab "left";  }
    bind "}"  { MoveTab "right"; }

    // sync
    bind "s" { ToggleActiveSyncTab; SwitchToMode "locked"; }
  }
  session {
    bind "c" {
      LaunchOrFocusPlugin "configuration" {
        floating true
        move_to_focused_tab true
      }
      SwitchToMode "locked"
    }
    bind "p" {
      LaunchOrFocusPlugin "plugin-manager" {
        floating true
        move_to_focused_tab true
      }
      SwitchToMode "locked"
    }
    bind "s" {
      LaunchOrFocusPlugin "session-manager" {
        floating true
        move_to_focused_tab true
      }
      SwitchToMode "locked"
    }
  }

  move {
    bind "left"  { MovePane "left";  }
    bind "down"  { MovePane "down";  }
    bind "up"    { MovePane "up";    }
    bind "right" { MovePane "right"; }

    bind "h"     { MovePane "left";  }
    bind "j"     { MovePane "down";  }
    bind "k"     { MovePane "up";    }
    bind "l"     { MovePane "right"; }

    bind "n"     { MovePane;          }
    bind "tab"   { MovePane;          }
    bind "p"     { MovePaneBackwards; }
  }
  resize {
    bind "+"     { Resize "Increase";       }
    bind "-"     { Resize "Decrease";       }
    bind "="     { Resize "Increase";       }

    bind "H"     { Resize "Decrease left";  }
    bind "J"     { Resize "Decrease down";  }
    bind "K"     { Resize "Decrease up";    }
    bind "L"     { Resize "Decrease right"; }

    bind "h"     { Resize "Increase left";  }
    bind "j"     { Resize "Increase down";  }
    bind "k"     { Resize "Increase up";    }
    bind "l"     { Resize "Increase right"; }

    bind "left"  { Resize "Increase left";  }
    bind "down"  { Resize "Increase down";  }
    bind "up"    { Resize "Increase up";    }
    bind "right" { Resize "Increase right"; }
  }

  scroll {
    bind "e" { EditScrollback; SwitchToMode "locked"; }

    bind "/" { SwitchToMode "entersearch"; SearchInput 0; }

    bind "Ctrl h" { MoveFocusOrTab "left";  SwitchToMode "locked"; }
    bind "Ctrl j" { MoveFocus      "down";  SwitchToMode "locked"; }
    bind "Ctrl k" { MoveFocus      "up";    SwitchToMode "locked"; }
    bind "Ctrl l" { MoveFocusOrTab "right"; SwitchToMode "locked"; }

    bind "u" "Ctrl u" { HalfPageScrollUp;   }
    bind "d" "Ctrl d" { HalfPageScrollDown; }
    bind "b" "Ctrl b" { PageScrollUp;       }
    bind "f" "Ctrl f" { PageScrollDown;     }
  }
  search {
    bind "n" { Search "up";   }
    bind "N" { Search "down"; }

    bind "c" { SearchToggleOption "CaseSensitivity"; }
    bind "o" { SearchToggleOption "WholeWord";       }
    bind "w" { SearchToggleOption "Wrap";            }
  }
  entersearch {
    bind "esc" "Ctrl c" { SwitchToMode "scroll"; }
    bind "enter"        { SwitchToMode "search"; }
  }

  renamepane {
    bind "esc" { UndoRenamePane; SwitchToMode "pane"; }
  }
  renametab {
    bind "esc" { UndoRenameTab; SwitchToMode "tab"; }
  }

  // scroll buffer
  shared_among "scroll" "search" {
    bind "Ctrl f" { PageScrollDown; }
    bind "Ctrl b" { PageScrollUp; }

    bind "d" { HalfPageScrollDown; }
    bind "u" { HalfPageScrollUp; }

    bind "Ctrl c" "enter" { ScrollToBottom; SwitchToMode "locked"; }
  }
  shared_among "renametab" "renamepane" {
    bind "Ctrl c" { SwitchToMode "locked"; }
  }

  // -> locked
  shared_except "locked" "entersearch" "renametab" "renamepane" {
    bind "q" "esc" { SwitchToMode "locked"; }
  }
  shared_except "locked" "entersearch" {
    bind "enter" { SwitchToMode "locked"; }
  }
  // -> normal
  shared_except "locked" "normal" "renamepane" "renametab" {
    bind "backspace" { SwitchToMode "normal"; }
  }

  // -> move
  shared_except "locked" "entersearch" "renametab" "renamepane" "move" {
    bind "m" { SwitchToMode "move"; }
  }
  // -> resize
  shared_except "locked" "resize" "pane" "tab" "entersearch" "renametab" "renamepane" {
    bind "r" { SwitchToMode "resize"; }
  }

  // -> pane
  shared_among "normal" "resize" "tab" "scroll" "prompt" "tmux" {
    bind "p" { SwitchToMode "pane"; }
  }
  // -> tab
  shared_except "locked" "tab" "entersearch" "renametab" "renamepane" {
    bind "t" { SwitchToMode "tab"; }
  }
  // -> session
  shared_except "locked" "entersearch" "search" "renametab" "renamepane" "session" {
    bind "s" { SwitchToMode "session"; }
  }

  // -> scroll
  shared_except "locked" "tab" "scroll" "entersearch" "renametab" "renamepane" {
    bind "[" { SwitchToMode "scroll"; }
  }

  shared_among "normal" "pane" {
    bind "z"     { ToggleFocusFullscreen;     SwitchToMode "locked"; }
    bind "space" { TogglePaneEmbedOrFloating; SwitchToMode "locked"; }
  }
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
  tab-bar          location="zellij:tab-bar"
  compact-bar      location="zellij:compact-bar"
  status-bar       location="zellij:status-bar"

  about            location="zellij:about"
  welcome-screen   location="zellij:session-manager" welcome_screen=true

  session-manager  location="zellij:session-manager"
  plugin-manager   location="zellij:plugin-manager"
  configuration    location="zellij:configuration"

  filepicker       location="zellij:strider" cwd="/"
  strider          location="zellij:strider"
}

// Plugins to load in the background when a new session starts
// eg. "file:/path/to/my-plugin.wasm"
// eg. "https://example.com/my-plugin.wasm"
load_plugins {
}

// Use a simplified UI without special fonts (arrow glyphs)
// Options:
//   - true
//   - false (Default)
//
// simplified_ui true

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "tokyonight_moon"

// Choose the base input mode of zellij.
// Default: normal
//
default_mode "locked"

// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
//
// default_shell "fish"

// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd "/tmp"

// The name of the default layout to load on startup
// Default: "default"
//
// default_layout "compact"

// The folder in which Zellij will look for layouts
// (Requires restart)
//
// layout_dir "/tmp"

// The folder in which Zellij will look for themes
// (Requires restart)
//
// theme_dir "/tmp"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// Options:
//   - true (default)
//   - false
//
mouse_mode false

// Toggle having pane frames around the panes
// Options:
//   - true (default, enabled)
//   - false
//
// pane_frames false

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
//
// mirror_session true

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
//
// on_force_close "quit"

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx
//
// copy_command "pbcopy"

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "primary"

// Enable automatic copying (and clearing) of selection when releasing mouse
// Default: true
//
// copy_on_select true

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
// scrollback_editor "/usr/bin/vim"

// A fixed name to always give the Zellij session.
// Consider also setting `attach_to_session true,`
// otherwise this will error if such a session exists.
// Default: <RANDOM>
//
session_name "home"

// When `session_name` is provided, attaches to that session
// if it is already running or creates it otherwise.
// Default: false
//
attach_to_session true

// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout false

// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// Options:
//   - true (default)
//   - false
//
session_serialization true

// Whether pane viewports are serialized along with the session, default is false
// Options:
//   - true
//   - false (default)
//
// serialize_pane_viewport false

// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
//
// scrollback_lines_to_serialize 10000

// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
//
// styled_underlines false

// How often in seconds sessions are serialized
//
// serialization_interval 10000

// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
//
// disable_session_metadata true

// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
//
// support_kitty_keyboard_protocol false

// Whether to stack panes when resizing beyond a certain size
// Default: true
//
// stacked_resize false

// Whether to show tips on startup
// Default: true
//
show_startup_tips false

// Whether to show release notes on first version run
// Default: true
//
show_release_notes true
